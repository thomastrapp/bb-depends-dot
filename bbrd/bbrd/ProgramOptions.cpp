// Author: Thomas Trapp - https://thomastrapp.com/
// License: MIT

#include "bbrd/ProgramOptions.h"


namespace bbrd {


ProgramOptions::ProgramOptions()
: desc_("Options"),
  vm_()
{
  namespace po = boost::program_options;
  this->desc_.add_options()
    ("task-depends-dot", po::value<std::string>()
      ->value_name("<file>"),
      "The task-depends.dot file generated by `bitbake -g`")
    ("recipe", po::value<std::string>()
      ->value_name("<recipe_name>"),
      "Select a recipe")
    ("depends,d", "List dependencies of recipe"
                  " (default if recipe given)")
    ("rdepends,r", "List reverse dependencies of recipe")
    ("transitive,t", "List all transitive dependencies"
                     " of the given recipe")
    ("help,h", "Print this help message")
    ("version,V", "Print version")
  ;
}

void ProgramOptions::store_and_validate_or_throw(int argc, const char * argv[])
{
  namespace po = boost::program_options;

  po::command_line_parser cli_parser(argc, argv);
  po::positional_options_description pos_opt;
  cli_parser.options(this->desc_);

  pos_opt.add("task-depends-dot", 1);
  pos_opt.add("recipe", 1);
  cli_parser.positional(pos_opt);

  po::store(cli_parser.run(), this->vm_);
  po::notify(this->vm_);

  if( this->contains("help") || this->contains("version") )
    return;

  if( !this->contains("task-depends-dot") )
    throw po::error("missing task-depends.dot");

  if( this->contains("depends") && this->contains("rdepends") )
    throw po::error("provide either --depends or --rdepends, not both");
}

bool ProgramOptions::contains(const char * key) const
{
  return this->vm_.count(key) && !this->vm_[key].defaulted();
}

std::string ProgramOptions::get(const char * key) const
{
  return this->vm_[key].as<std::string>();
}

void ProgramOptions::print(const char * program_name, std::ostream& out) const
{
  out << program_name << " - List dependencies between BitBake recipes.\n\n"
      << "Usage:\n  "
      << program_name
      << " [options] <task-depends.dot>\n"
         "      List all recipes\n\n  "
      << program_name
      << " [options] <task-depends.dot> <recipe_name>\n"
         "      List dependencies of a specific recipe\n\n"
      << this->desc_;
}


} // namespace bbrd

